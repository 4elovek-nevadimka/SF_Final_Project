# Generated by Django 4.1.4 on 2022-12-17 14:52

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(blank=True, max_length=128, null=True, verbose_name='Название')),
                ('description', models.CharField(blank=True, max_length=512, null=True, verbose_name='Описание')),
                ('role', models.CharField(choices=[('CL', 'Client'), ('SC', 'Service company'), ('MN', 'Manager')], default='CL', max_length=2, verbose_name='Роль')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DriveAxleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.CharField(max_length=256, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Модель ведущего моста',
                'verbose_name_plural': 'Модели ведущих мостов',
            },
        ),
        migrations.CreateModel(
            name='EngineModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.CharField(max_length=256, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Модель двигателя',
                'verbose_name_plural': 'Модели двигателей',
            },
        ),
        migrations.CreateModel(
            name='FailureNode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.CharField(max_length=256, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Узел отказа',
                'verbose_name_plural': 'Узлы отказа',
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=32, unique=True, verbose_name='Заводской номер машины')),
                ('engine_serial_number', models.CharField(max_length=32, verbose_name='Зав. № двигателя')),
                ('transmission_serial_number', models.CharField(max_length=32, verbose_name='Зав. № трансмиссии')),
                ('drive_axle_serial_number', models.CharField(max_length=32, verbose_name='Зав. № ведущего моста')),
                ('steering_bridge_serial_number', models.CharField(max_length=32, verbose_name='Зав. № управляемого моста')),
                ('supply_contract', models.CharField(max_length=128, verbose_name='Договор поставки №, дата')),
                ('shipment_date', models.DateField(verbose_name='Дата отгрузки с завода')),
                ('consumer', models.CharField(max_length=128, verbose_name='Грузополучатель (конечный потребитель)')),
                ('delivery_address', models.CharField(max_length=256, verbose_name='Адрес поставки (эксплуатации)')),
                ('equipment', models.CharField(max_length=512, verbose_name='Комплектация (доп. опции)')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='client', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
                ('drive_axle_model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.driveaxlemodel', verbose_name='Модель ведущего моста')),
                ('engine_model', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.enginemodel', verbose_name='Модель двигателя')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='service_company', to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
            ],
            options={
                'verbose_name': 'Машина',
                'verbose_name_plural': 'Машины',
                'ordering': ('shipment_date',),
            },
        ),
        migrations.CreateModel(
            name='MaintenanceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.CharField(max_length=256, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Вид ТО',
                'verbose_name_plural': 'Виды ТО',
            },
        ),
        migrations.CreateModel(
            name='RecoveryMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.CharField(max_length=256, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Способ восстановления',
                'verbose_name_plural': 'Способы восстановления',
            },
        ),
        migrations.CreateModel(
            name='SteeringBridgeModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.CharField(max_length=256, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Модель управляемого моста',
                'verbose_name_plural': 'Модели управляемых мостов',
            },
        ),
        migrations.CreateModel(
            name='TransmissionModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.CharField(max_length=256, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Модель трансмиссии',
                'verbose_name_plural': 'Модели трансмиссий',
            },
        ),
        migrations.CreateModel(
            name='VehicleModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128, verbose_name='Название')),
                ('description', models.CharField(max_length=256, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Модель техники',
                'verbose_name_plural': 'Модели техники',
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_date', models.DateField(verbose_name='Дата проведения ТО')),
                ('operating_time', models.PositiveIntegerField(verbose_name='Наработка, м/час')),
                ('work_order_number', models.CharField(max_length=64, verbose_name='Заказ-наряд')),
                ('work_order_date', models.DateField(verbose_name='дата заказ-наряда')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.machine', verbose_name='Модель техники')),
                ('maintenance_type', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.maintenancetype', verbose_name='Вид ТО')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
            ],
            options={
                'verbose_name': 'Техническое обслуживание',
                'verbose_name_plural': 'Технические обслуживания',
                'ordering': ('maintenance_date',),
            },
        ),
        migrations.AddField(
            model_name='machine',
            name='steering_bridge_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.steeringbridgemodel', verbose_name='Модель управляемого моста'),
        ),
        migrations.AddField(
            model_name='machine',
            name='transmission_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.transmissionmodel', verbose_name='Модель трансмиссии'),
        ),
        migrations.AddField(
            model_name='machine',
            name='vehicle_model',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.vehiclemodel', verbose_name='Модель техники'),
        ),
        migrations.CreateModel(
            name='Claim',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('failure_date', models.DateField(verbose_name='Дата отказа')),
                ('operating_time', models.PositiveIntegerField(verbose_name='Наработка, м/час')),
                ('failure_description', models.CharField(max_length=512, verbose_name='Описание отказа')),
                ('spare_parts', models.CharField(max_length=512, verbose_name='Используемые запасные части')),
                ('recovery_date', models.DateField(verbose_name='Дата восстановления')),
                ('machine_downtime', models.PositiveIntegerField(null=True, verbose_name='Время простоя техники')),
                ('failure_node', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.failurenode', verbose_name='Узел отказа')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.machine', verbose_name='Модель техники')),
                ('recovery_method', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='silant.recoverymethod', verbose_name='Способ восстановления')),
            ],
            options={
                'verbose_name': 'Рекламация',
                'verbose_name_plural': 'Рекламации',
                'ordering': ('failure_date',),
            },
        ),
    ]
